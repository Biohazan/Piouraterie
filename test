end:dev:         _idleTimeout: 30000,
backend:dev:         _idlePrev: [TimersList],
backend:dev:         _idleNext: [TimersList],
backend:dev:         _idleStart: 1867,
backend:dev:         _onTimeout: [Function: bound checkConnections],
backend:dev:         _timerArgs: undefined,
backend:dev:         _repeat: 30000,
backend:dev:         _destroyed: false,
backend:dev:         [Symbol(refed)]: false,
backend:dev:         [Symbol(kHasPrimitive)]: false,
backend:dev:         [Symbol(asyncId)]: 110,
backend:dev:         [Symbol(triggerId)]: 0
backend:dev:       },
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     parser: HTTPParser {
backend:dev:       '0': null,
backend:dev:       '1': [Function: parserOnHeaders],
backend:dev:       '2': [Function: parserOnHeadersComplete],
backend:dev:       '3': [Function: parserOnBody],
backend:dev:       '4': [Function: parserOnMessageComplete],
backend:dev:       '5': [Function: bound onParserExecute],
backend:dev:       '6': [Function: bound onParserTimeout],
backend:dev:       _headers: [],
backend:dev:       _url: '',
backend:dev:       socket: [Circular *1],
backend:dev:       incoming: [Circular *2],
backend:dev:       outgoing: null,
backend:dev:       maxHeaderPairs: 2000,
backend:dev:       _consumed: true,
backend:dev:       onIncoming: [Function: bound parserOnIncoming],
backend:dev:       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
backend:dev:     },
backend:dev:     on: [Function: socketListenerWrap],
backend:dev:     addListener: [Function: socketListenerWrap],
backend:dev:     prependListener: [Function: socketListenerWrap],
backend:dev:     setEncoding: [Function: socketSetEncoding],
backend:dev:     _paused: false,
backend:dev:     _httpMessage: ServerResponse {
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 1,
backend:dev:       _maxListeners: undefined,
backend:dev:       outputData: [],
backend:dev:       outputSize: 0,
backend:dev:       writable: true,
backend:dev:       destroyed: false,
backend:dev:       _last: false,
backend:dev:       chunkedEncoding: false,
backend:dev:       shouldKeepAlive: true,
backend:dev:       maxRequestsOnConnectionReached: false,
backend:dev:       _defaultKeepAlive: true,
backend:dev:       useChunkedEncodingByDefault: true,
backend:dev:       sendDate: true,
backend:dev:       _removedConnection: false,
backend:dev:       _removedContLen: false,
backend:dev:       _removedTE: false,
backend:dev:       strictContentLength: false,
backend:dev:       _contentLength: null,
backend:dev:       _hasBody: true,
backend:dev:       _trailer: '',
backend:dev:       finished: false,
backend:dev:       _headerSent: false,
backend:dev:       _closed: false,
backend:dev:       socket: [Circular *1],
backend:dev:       _header: null,
backend:dev:       _keepAliveTimeout: 5000,
backend:dev:       _onPendingData: [Function: bound updateOutgoingData],
backend:dev:       req: [Circular *2],
backend:dev:       _sent100: false,
backend:dev:       _expect_continue: false,
backend:dev:       _maxRequestsPerSocket: 0,
backend:dev:       locals: [Object: null prototype] {},
backend:dev:       statusCode: 201,
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(kBytesWritten)]: 0,
backend:dev:       [Symbol(kNeedDrain)]: false,
backend:dev:       [Symbol(corked)]: 0,
backend:dev:       [Symbol(kOutHeaders)]: [Object: null prototype],
backend:dev:       [Symbol(errored)]: null,
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     [Symbol(async_id_symbol)]: 171,
backend:dev:     [Symbol(kHandle)]: TCP {
backend:dev:       reading: false,
backend:dev:       onconnection: null,
backend:dev:       _consumed: true,
backend:dev:       [Symbol(owner_symbol)]: [Circular *1]
backend:dev:     },
backend:dev:     [Symbol(lastWriteQueueSize)]: 0,
backend:dev:     [Symbol(timeout)]: null,
backend:dev:     [Symbol(kBuffer)]: null,
backend:dev:     [Symbol(kBufferCb)]: null,
backend:dev:     [Symbol(kBufferGen)]: null,
backend:dev:     [Symbol(kCapture)]: false,
backend:dev:     [Symbol(kSetNoDelay)]: true,
backend:dev:     [Symbol(kSetKeepAlive)]: false,
backend:dev:     [Symbol(kSetKeepAliveInitialDelay)]: 0,
backend:dev:     [Symbol(kBytesRead)]: 0,
backend:dev:     [Symbol(kBytesWritten)]: 0
backend:dev:   },
backend:dev:   _consuming: true,
backend:dev:   _dumped: false,
backend:dev:   next: [Function: next],
backend:dev:   baseUrl: '',
backend:dev:   originalUrl: '/product',
backend:dev:   _parsedUrl: Url {
backend:dev:     protocol: null,
backend:dev:     slashes: null,
backend:dev:     auth: null,
backend:dev:     host: null,
backend:dev:     port: null,
backend:dev:     hostname: null,
backend:dev:     hash: null,
backend:dev:     search: null,
backend:dev:     query: null,
backend:dev:     pathname: '/product',
backend:dev:     path: '/product',
backend:dev:     href: '/product',
backend:dev:     _raw: '/product'
backend:dev:   },
backend:dev:   params: {},
backend:dev:   query: {},
backend:dev:   res: <ref *3> ServerResponse {
backend:dev:     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },       
backend:dev:     _eventsCount: 1,
backend:dev:     _maxListeners: undefined,
backend:dev:     outputData: [],
backend:dev:     outputSize: 0,
backend:dev:     writable: true,
backend:dev:     destroyed: false,
backend:dev:     _last: false,
backend:dev:     chunkedEncoding: false,
backend:dev:     shouldKeepAlive: true,
backend:dev:     maxRequestsOnConnectionReached: false,
backend:dev:     _defaultKeepAlive: true,
backend:dev:     useChunkedEncodingByDefault: true,
backend:dev:     sendDate: true,
backend:dev:     _removedConnection: false,
backend:dev:     _removedContLen: false,
backend:dev:     _removedTE: false,
backend:dev:     strictContentLength: false,
backend:dev:     _contentLength: null,
backend:dev:     _hasBody: true,
backend:dev:     _trailer: '',
backend:dev:     finished: false,
backend:dev:     _headerSent: false,
backend:dev:     _closed: false,
backend:dev:     socket: <ref *1> Socket {
backend:dev:       connecting: false,
backend:dev:       _hadError: false,
backend:dev:       _parent: null,
backend:dev:       _host: null,
backend:dev:       _closeAfterHandlingError: false,
backend:dev:       _readableState: [ReadableState],
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 8,
backend:dev:       _maxListeners: undefined,
backend:dev:       _writableState: [WritableState],
backend:dev:       allowHalfOpen: true,
backend:dev:       _sockname: null,
backend:dev:       _pendingData: null,
backend:dev:       _pendingEncoding: '',
backend:dev:       server: [Server],
backend:dev:       _server: [Server],
backend:dev:       parser: [HTTPParser],
backend:dev:       on: [Function: socketListenerWrap],
backend:dev:       addListener: [Function: socketListenerWrap],
backend:dev:       prependListener: [Function: socketListenerWrap],
backend:dev:       setEncoding: [Function: socketSetEncoding],
backend:dev:       _paused: false,
backend:dev:       _httpMessage: [Circular *3],
backend:dev:       [Symbol(async_id_symbol)]: 171,
backend:dev:       [Symbol(kHandle)]: [TCP],
backend:dev:       [Symbol(lastWriteQueueSize)]: 0,
backend:dev:       [Symbol(timeout)]: null,
backend:dev:       [Symbol(kBuffer)]: null,
backend:dev:       [Symbol(kBufferCb)]: null,
backend:dev:       [Symbol(kBufferGen)]: null,
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(kSetNoDelay)]: true,
backend:dev:       [Symbol(kSetKeepAlive)]: false,
backend:dev:       [Symbol(kSetKeepAliveInitialDelay)]: 0,
backend:dev:       [Symbol(kBytesRead)]: 0,
backend:dev:       [Symbol(kBytesWritten)]: 0
backend:dev:     },
backend:dev:     _header: null,
backend:dev:     _keepAliveTimeout: 5000,
backend:dev:     _onPendingData: [Function: bound updateOutgoingData],
backend:dev:     req: [Circular *2],
backend:dev:     _sent100: false,
backend:dev:     _expect_continue: false,
backend:dev:     _maxRequestsPerSocket: 0,
backend:dev:     locals: [Object: null prototype] {},
backend:dev:     statusCode: 201,
backend:dev:     [Symbol(kCapture)]: false,
backend:dev:     [Symbol(kBytesWritten)]: 0,
backend:dev:     [Symbol(kNeedDrain)]: false,
backend:dev:     [Symbol(corked)]: 0,
backend:dev:     [Symbol(kOutHeaders)]: [Object: null prototype] {
backend:dev:       'x-powered-by': [Array],
backend:dev:       'access-control-allow-origin': [Array],
backend:dev:       vary: [Array]
backend:dev:     },
backend:dev:     [Symbol(errored)]: null,
backend:dev:     [Symbol(kUniqueHeaders)]: null
backend:dev:   },
backend:dev:   body: [Object: null prototype] {},
backend:dev:   route: Route {
backend:dev:     path: '/product',
backend:dev:     stack: [ [Layer] ],
backend:dev:     methods: { post: true }
backend:dev:   },
backend:dev:   files: [ { fieldname: 'file' } ],
backend:dev:   [Symbol(kCapture)]: false,
backend:dev:   [Symbol(kHeaders)]: {
backend:dev:     host: 'localhost:4000',
backend:dev:     connection: 'keep-alive',
backend:dev:     'content-length': '138974',
backend:dev:     pragma: 'no-cache',
backend:dev:     'cache-control': 'no-cache',
backend:dev:     'sec-ch-ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',   
backend:dev:     'sec-ch-ua-platform': '"Windows"',
backend:dev:     'sec-ch-ua-mobile': '?0',
backend:dev:     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
backend:dev:     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryAGNB4z4qtboyuXAB',
backend:dev:     accept: '*/*',
backend:dev:     origin: 'http://localhost:3000',
backend:dev:     'sec-fetch-site': 'same-site',
backend:dev:     'sec-fetch-mode': 'cors',
backend:dev:     'sec-fetch-dest': 'empty',
backend:dev:     referer: 'http://localhost:3000/',
backend:dev:     'accept-encoding': 'gzip, deflate, br',
backend:dev:     'accept-language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'
backend:dev:   },
backend:dev:   [Symbol(kHeadersCount)]: 36,
backend:dev:   [Symbol(kTrailers)]: null,
backend:dev:   [Symbol(kTrailersCount)]: 0
backend:dev: }
backend:dev: <ref *2> IncomingMessage {
backend:dev:   _readableState: ReadableState {
backend:dev:     objectMode: false,
backend:dev:     highWaterMark: 16384,
backend:dev:     buffer: BufferList { head: null, tail: null, length: 0 },
backend:dev:     length: 0,
backend:dev:     pipes: [ [Multipart] ],
backend:dev:     flowing: true,
backend:dev:     ended: false,
backend:dev:     endEmitted: false,
backend:dev:     reading: true,
backend:dev:     constructed: true,
backend:dev:     sync: false,
backend:dev:     needReadable: true,
backend:dev:     emittedReadable: false,
backend:dev:     readableListening: false,
backend:dev:     resumeScheduled: false,
backend:dev:     errorEmitted: false,
backend:dev:     emitClose: true,
backend:dev:     autoDestroy: true,
backend:dev:     destroyed: false,
backend:dev:     errored: null,
backend:dev:     closed: false,
backend:dev:     closeEmitted: false,
backend:dev:     defaultEncoding: 'utf8',
backend:dev:     awaitDrainWriters: null,
backend:dev:     multiAwaitDrain: false,
backend:dev:     readingMore: false,
backend:dev:     dataEmitted: true,
backend:dev:     decoder: null,
backend:dev:     encoding: null,
backend:dev:     [Symbol(kPaused)]: false
backend:dev:   },
backend:dev:   _events: [Object: null prototype] {
backend:dev:     end: [Function: bound onceWrapper] { listener: [Function: onend] },
backend:dev:     data: [Function: ondata]
backend:dev:   },
backend:dev:   _eventsCount: 2,
backend:dev:   _maxListeners: undefined,
backend:dev:   socket: <ref *1> Socket {
backend:dev:     connecting: false,
backend:dev:     _hadError: false,
backend:dev:     _parent: null,
backend:dev:     _host: null,
backend:dev:     _closeAfterHandlingError: false,
backend:dev:     _readableState: ReadableState {
backend:dev:       objectMode: false,
backend:dev:       highWaterMark: 16384,
backend:dev:       buffer: BufferList { head: null, tail: null, length: 0 },
backend:dev:       length: 0,
backend:dev:       pipes: [],
backend:dev:       flowing: true,
backend:dev:       ended: false,
backend:dev:       endEmitted: false,
backend:dev:       reading: true,
backend:dev:       constructed: true,
backend:dev:       sync: false,
backend:dev:       needReadable: true,
backend:dev:       emittedReadable: false,
backend:dev:       readableListening: false,
backend:dev:       resumeScheduled: true,
backend:dev:       errorEmitted: false,
backend:dev:       emitClose: false,
backend:dev:       autoDestroy: true,
backend:dev:       destroyed: false,
backend:dev:       errored: null,
backend:dev:       closed: false,
backend:dev:       closeEmitted: false,
backend:dev:       defaultEncoding: 'utf8',
backend:dev:       awaitDrainWriters: null,
backend:dev:       multiAwaitDrain: false,
backend:dev:       readingMore: false,
backend:dev:       dataEmitted: false,
backend:dev:       decoder: null,
backend:dev:       encoding: null,
backend:dev:       [Symbol(kPaused)]: false
backend:dev:     },
backend:dev:     _events: [Object: null prototype] {
backend:dev:       end: [Array],
backend:dev:       timeout: [Function: socketOnTimeout],
backend:dev:       data: [Function: bound socketOnData],
backend:dev:       error: [Function: socketOnError],
backend:dev:       close: [Array],
backend:dev:       drain: [Function: bound socketOnDrain],
backend:dev:       resume: [Function: onSocketResume],
backend:dev:       pause: [Function: onSocketPause]
backend:dev:     },
backend:dev:     _eventsCount: 8,
backend:dev:     _maxListeners: undefined,
backend:dev:     _writableState: WritableState {
backend:dev:       objectMode: false,
backend:dev:       highWaterMark: 16384,
backend:dev:       finalCalled: false,
backend:dev:       needDrain: false,
backend:dev:       ending: false,
backend:dev:       ended: false,
backend:dev:       finished: false,
backend:dev:       destroyed: false,
backend:dev:       decodeStrings: false,
backend:dev:       defaultEncoding: 'utf8',
backend:dev:       length: 0,
backend:dev:       writing: false,
backend:dev:       corked: 0,
backend:dev:       sync: true,
backend:dev:       bufferProcessing: false,
backend:dev:       onwrite: [Function: bound onwrite],
backend:dev:       writecb: null,
backend:dev:       writelen: 0,
backend:dev:       afterWriteTickInfo: null,
backend:dev:       buffered: [],
backend:dev:       bufferedIndex: 0,
backend:dev:       allBuffers: true,
backend:dev:       allNoop: true,
backend:dev:       pendingcb: 0,
backend:dev:       constructed: true,
backend:dev:       prefinished: false,
backend:dev:       errorEmitted: false,
backend:dev:       emitClose: false,
backend:dev:       autoDestroy: true,
backend:dev:       errored: null,
backend:dev:       closed: false,
backend:dev:       closeEmitted: false,
backend:dev:       [Symbol(kOnFinished)]: []
backend:dev:     },
backend:dev:     allowHalfOpen: true,
backend:dev:     _sockname: null,
backend:dev:     _pendingData: null,
backend:dev:     _pendingEncoding: '',
backend:dev:     server: Server {
backend:dev:       maxHeaderSize: undefined,
backend:dev:       insecureHTTPParser: undefined,
backend:dev:       requestTimeout: 300000,
backend:dev:       headersTimeout: 60000,
backend:dev:       keepAliveTimeout: 5000,
backend:dev:       connectionsCheckingInterval: 30000,
backend:dev:       joinDuplicateHeaders: undefined,
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 2,
backend:dev:       _maxListeners: undefined,
backend:dev:       _connections: 1,
backend:dev:       _handle: [TCP],
backend:dev:       _usingWorkers: false,
backend:dev:       _workers: [],
backend:dev:       _unref: false,
backend:dev:       allowHalfOpen: true,
backend:dev:       pauseOnConnect: false,
backend:dev:       noDelay: true,
backend:dev:       keepAlive: false,
backend:dev:       keepAliveInitialDelay: 0,
backend:dev:       httpAllowHalfOpen: false,
backend:dev:       timeout: 0,
backend:dev:       maxHeadersCount: null,
backend:dev:       maxRequestsPerSocket: 0,
backend:dev:       _connectionKey: '6::::4000',
backend:dev:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
backend:dev:       [Symbol(ServerResponse)]: [Function: ServerResponse],
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(async_id_symbol)]: 111,
backend:dev:       [Symbol(http.server.connections)]: ConnectionsList {},
backend:dev:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
backend:dev:         _idleTimeout: 30000,
backend:dev:         _idlePrev: [TimersList],
backend:dev:         _idleNext: [TimersList],
backend:dev:         _idleStart: 1867,
backend:dev:         _onTimeout: [Function: bound checkConnections],
backend:dev:         _timerArgs: undefined,
backend:dev:         _repeat: 30000,
backend:dev:         _destroyed: false,
backend:dev:         [Symbol(refed)]: false,
backend:dev:         [Symbol(kHasPrimitive)]: false,
backend:dev:         [Symbol(asyncId)]: 110,
backend:dev:         [Symbol(triggerId)]: 0
backend:dev:       },
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     _server: Server {
backend:dev:       maxHeaderSize: undefined,
backend:dev:       insecureHTTPParser: undefined,
backend:dev:       requestTimeout: 300000,
backend:dev:       headersTimeout: 60000,
backend:dev:       keepAliveTimeout: 5000,
backend:dev:       connectionsCheckingInterval: 30000,
backend:dev:       joinDuplicateHeaders: undefined,
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 2,
backend:dev:       _maxListeners: undefined,
backend:dev:       _connections: 1,
backend:dev:       _handle: [TCP],
backend:dev:       _usingWorkers: false,
backend:dev:       _workers: [],
backend:dev:       _unref: false,
backend:dev:       allowHalfOpen: true,
backend:dev:       pauseOnConnect: false,
backend:dev:       noDelay: true,
backend:dev:       keepAlive: false,
backend:dev:       keepAliveInitialDelay: 0,
backend:dev:       httpAllowHalfOpen: false,
backend:dev:       timeout: 0,
backend:dev:       maxHeadersCount: null,
backend:dev:       maxRequestsPerSocket: 0,
backend:dev:       _connectionKey: '6::::4000',
backend:dev:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
backend:dev:       [Symbol(ServerResponse)]: [Function: ServerResponse],
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(async_id_symbol)]: 111,
backend:dev:       [Symbol(http.server.connections)]: ConnectionsList {},
backend:dev:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
backend:dev:         _idleTimeout: 30000,
backend:dev:         _idlePrev: [TimersList],
backend:dev:         _idleNext: [TimersList],
backend:dev:         _idleStart: 1867,
backend:dev:         _onTimeout: [Function: bound checkConnections],
backend:dev:         _timerArgs: undefined,
backend:dev:         _repeat: 30000,
backend:dev:         _destroyed: false,
backend:dev:         [Symbol(refed)]: false,
backend:dev:         [Symbol(kHasPrimitive)]: false,
backend:dev:         [Symbol(asyncId)]: 110,
backend:dev:         [Symbol(triggerId)]: 0
backend:dev:       },
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     parser: HTTPParser {
backend:dev:       '0': null,
backend:dev:       '1': [Function: parserOnHeaders],
backend:dev:       '2': [Function: parserOnHeadersComplete],
backend:dev:       '3': [Function: parserOnBody],
backend:dev:       '4': [Function: parserOnMessageComplete],
backend:dev:       '5': [Function: bound onParserExecute],
backend:dev:       '6': [Function: bound onParserTimeout],
backend:dev:       _headers: [],
backend:dev:       _url: '',
backend:dev:       socket: [Circular *1],
backend:dev:       incoming: [Circular *2],
backend:dev:       outgoing: null,
backend:dev:       maxHeaderPairs: 2000,
backend:dev:       _consumed: true,
backend:dev:       onIncoming: [Function: bound parserOnIncoming],
backend:dev:       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
backend:dev:     },
backend:dev:     on: [Function: socketListenerWrap],
backend:dev:     addListener: [Function: socketListenerWrap],
backend:dev:     prependListener: [Function: socketListenerWrap],
backend:dev:     setEncoding: [Function: socketSetEncoding],
backend:dev:     _paused: false,
backend:dev:     _httpMessage: ServerResponse {
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 1,
backend:dev:       _maxListeners: undefined,
backend:dev:       outputData: [],
backend:dev:       outputSize: 0,
backend:dev:       writable: true,
backend:dev:       destroyed: false,
backend:dev:       _last: false,
backend:dev:       chunkedEncoding: false,
backend:dev:       shouldKeepAlive: true,
backend:dev:       maxRequestsOnConnectionReached: false,
backend:dev:       _defaultKeepAlive: true,
backend:dev:       useChunkedEncodingByDefault: true,
backend:dev:       sendDate: true,
backend:dev:       _removedConnection: false,
backend:dev:       _removedContLen: false,
backend:dev:       _removedTE: false,
backend:dev:       strictContentLength: false,
backend:dev:       _contentLength: null,
backend:dev:       _hasBody: true,
backend:dev:       _trailer: '',
backend:dev:       finished: false,
backend:dev:       _headerSent: false,
backend:dev:       _closed: false,
backend:dev:       socket: [Circular *1],
backend:dev:       _header: null,
backend:dev:       _keepAliveTimeout: 5000,
backend:dev:       _onPendingData: [Function: bound updateOutgoingData],
backend:dev:       req: [Circular *2],
backend:dev:       _sent100: false,
backend:dev:       _expect_continue: false,
backend:dev:       _maxRequestsPerSocket: 0,
backend:dev:       locals: [Object: null prototype] {},
backend:dev:       statusCode: 201,
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(kBytesWritten)]: 0,
backend:dev:       [Symbol(kNeedDrain)]: false,
backend:dev:       [Symbol(corked)]: 0,
backend:dev:       [Symbol(kOutHeaders)]: [Object: null prototype],
backend:dev:       [Symbol(errored)]: null,
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     [Symbol(async_id_symbol)]: 171,
backend:dev:     [Symbol(kHandle)]: TCP {
backend:dev:       reading: false,
backend:dev:       onconnection: null,
backend:dev:       _consumed: true,
backend:dev:       [Symbol(owner_symbol)]: [Circular *1]
backend:dev:     },
backend:dev:     [Symbol(lastWriteQueueSize)]: 0,
backend:dev:     [Symbol(timeout)]: null,
backend:dev:     [Symbol(kBuffer)]: null,
backend:dev:     [Symbol(kBufferCb)]: null,
backend:dev:     [Symbol(kBufferGen)]: null,
backend:dev:     [Symbol(kCapture)]: false,
backend:dev:     [Symbol(kSetNoDelay)]: true,
backend:dev:     [Symbol(kSetKeepAlive)]: false,
backend:dev:     [Symbol(kSetKeepAliveInitialDelay)]: 0,
backend:dev:     [Symbol(kBytesRead)]: 0,
backend:dev:     [Symbol(kBytesWritten)]: 0
backend:dev:   },
backend:dev:   httpVersionMajor: 1,
backend:dev:   httpVersionMinor: 1,
backend:dev:   httpVersion: '1.1',
backend:dev:   complete: false,
backend:dev:   rawHeaders: [
backend:dev:     'Host',
backend:dev:     'localhost:4000',
backend:dev:     'Connection',
backend:dev:     'keep-alive',
backend:dev:     'Content-Length',
backend:dev:     '138974',
backend:dev:     'Pragma',
backend:dev:     'no-cache',
backend:dev:     'Cache-Control',
backend:dev:     'no-cache',
backend:dev:     'sec-ch-ua',
backend:dev:     '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
backend:dev:     'sec-ch-ua-platform',
backend:dev:     '"Windows"',
backend:dev:     'sec-ch-ua-mobile',
backend:dev:     '?0',
backend:dev:     'User-Agent',
backend:dev:     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
backend:dev:     'Content-Type',
backend:dev:     'multipart/form-data; boundary=----WebKitFormBoundaryAGNB4z4qtboyuXAB',
backend:dev:     'Accept',
backend:dev:     '*/*',
backend:dev:     'Origin',
backend:dev:     'http://localhost:3000',
backend:dev:     'Sec-Fetch-Site',
backend:dev:     'same-site',
backend:dev:     'Sec-Fetch-Mode',
backend:dev:     'cors',
backend:dev:     'Sec-Fetch-Dest',
backend:dev:     'empty',
backend:dev:     'Referer',
backend:dev:     'http://localhost:3000/',
backend:dev:     'Accept-Encoding',
backend:dev:     'gzip, deflate, br',
backend:dev:     'Accept-Language',
backend:dev:     'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'
backend:dev:   ],
backend:dev:   rawTrailers: [],
backend:dev:   joinDuplicateHeaders: undefined,
backend:dev:   aborted: false,
backend:dev:   upgrade: false,
backend:dev:   url: '/product',
backend:dev:   method: 'POST',
backend:dev:   statusCode: null,
backend:dev:   statusMessage: null,
backend:dev:   client: <ref *1> Socket {
backend:dev:     connecting: false,
backend:dev:     _hadError: false,
backend:dev:     _parent: null,
backend:dev:     _host: null,
backend:dev:     _closeAfterHandlingError: false,
backend:dev:     _readableState: ReadableState {
backend:dev:       objectMode: false,
backend:dev:       highWaterMark: 16384,
backend:dev:       buffer: BufferList { head: null, tail: null, length: 0 },
backend:dev:       length: 0,
backend:dev:       pipes: [],
backend:dev:       flowing: true,
backend:dev:       ended: false,
backend:dev:       endEmitted: false,
backend:dev:       reading: true,
backend:dev:       constructed: true,
backend:dev:       sync: false,
backend:dev:       needReadable: true,
backend:dev:       emittedReadable: false,
backend:dev:       readableListening: false,
backend:dev:       resumeScheduled: true,
backend:dev:       errorEmitted: false,
backend:dev:       emitClose: false,
backend:dev:       autoDestroy: true,
backend:dev:       destroyed: false,
backend:dev:       errored: null,
backend:dev:       closed: false,
backend:dev:       closeEmitted: false,
backend:dev:       defaultEncoding: 'utf8',
backend:dev:       awaitDrainWriters: null,
backend:dev:       multiAwaitDrain: false,
backend:dev:       readingMore: false,
backend:dev:       dataEmitted: false,
backend:dev:       decoder: null,
backend:dev:       encoding: null,
backend:dev:       [Symbol(kPaused)]: false
backend:dev:     },
backend:dev:     _events: [Object: null prototype] {
backend:dev:       end: [Array],
backend:dev:       timeout: [Function: socketOnTimeout],
backend:dev:       data: [Function: bound socketOnData],
backend:dev:       error: [Function: socketOnError],
backend:dev:       close: [Array],
backend:dev:       drain: [Function: bound socketOnDrain],
backend:dev:       resume: [Function: onSocketResume],
backend:dev:       pause: [Function: onSocketPause]
backend:dev:     },
backend:dev:     _eventsCount: 8,
backend:dev:     _maxListeners: undefined,
backend:dev:     _writableState: WritableState {
backend:dev:       objectMode: false,
backend:dev:       highWaterMark: 16384,
backend:dev:       finalCalled: false,
backend:dev:       needDrain: false,
backend:dev:       ending: false,
backend:dev:       ended: false,
backend:dev:       finished: false,
backend:dev:       destroyed: false,
backend:dev:       decodeStrings: false,
backend:dev:       defaultEncoding: 'utf8',
backend:dev:       length: 0,
backend:dev:       writing: false,
backend:dev:       corked: 0,
backend:dev:       sync: true,
backend:dev:       bufferProcessing: false,
backend:dev:       onwrite: [Function: bound onwrite],
backend:dev:       writecb: null,
backend:dev:       writelen: 0,
backend:dev:       afterWriteTickInfo: null,
backend:dev:       buffered: [],
backend:dev:       bufferedIndex: 0,
backend:dev:       allBuffers: true,
backend:dev:       allNoop: true,
backend:dev:       pendingcb: 0,
backend:dev:       constructed: true,
backend:dev:       prefinished: false,
backend:dev:       errorEmitted: false,
backend:dev:       emitClose: false,
backend:dev:       autoDestroy: true,
backend:dev:       errored: null,
backend:dev:       closed: false,
backend:dev:       closeEmitted: false,
backend:dev:       [Symbol(kOnFinished)]: []
backend:dev:     },
backend:dev:     allowHalfOpen: true,
backend:dev:     _sockname: null,
backend:dev:     _pendingData: null,
backend:dev:     _pendingEncoding: '',
backend:dev:     server: Server {
backend:dev:       maxHeaderSize: undefined,
backend:dev:       insecureHTTPParser: undefined,
backend:dev:       requestTimeout: 300000,
backend:dev:       headersTimeout: 60000,
backend:dev:       keepAliveTimeout: 5000,
backend:dev:       connectionsCheckingInterval: 30000,
backend:dev:       joinDuplicateHeaders: undefined,
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 2,
backend:dev:       _maxListeners: undefined,
backend:dev:       _connections: 1,
backend:dev:       _handle: [TCP],
backend:dev:       _usingWorkers: false,
backend:dev:       _workers: [],
backend:dev:       _unref: false,
backend:dev:       allowHalfOpen: true,
backend:dev:       pauseOnConnect: false,
backend:dev:       noDelay: true,
backend:dev:       keepAlive: false,
backend:dev:       keepAliveInitialDelay: 0,
backend:dev:       httpAllowHalfOpen: false,
backend:dev:       timeout: 0,
backend:dev:       maxHeadersCount: null,
backend:dev:       maxRequestsPerSocket: 0,
backend:dev:       _connectionKey: '6::::4000',
backend:dev:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
backend:dev:       [Symbol(ServerResponse)]: [Function: ServerResponse],
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(async_id_symbol)]: 111,
backend:dev:       [Symbol(http.server.connections)]: ConnectionsList {},
backend:dev:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
backend:dev:         _idleTimeout: 30000,
backend:dev:         _idlePrev: [TimersList],
backend:dev:         _idleNext: [TimersList],
backend:dev:         _idleStart: 1867,
backend:dev:         _onTimeout: [Function: bound checkConnections],
backend:dev:         _timerArgs: undefined,
backend:dev:         _repeat: 30000,
backend:dev:         _destroyed: false,
backend:dev:         [Symbol(refed)]: false,
backend:dev:         [Symbol(kHasPrimitive)]: false,
backend:dev:         [Symbol(asyncId)]: 110,
backend:dev:         [Symbol(triggerId)]: 0
backend:dev:       },
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     _server: Server {
backend:dev:       maxHeaderSize: undefined,
backend:dev:       insecureHTTPParser: undefined,
backend:dev:       requestTimeout: 300000,
backend:dev:       headersTimeout: 60000,
backend:dev:       keepAliveTimeout: 5000,
backend:dev:       connectionsCheckingInterval: 30000,
backend:dev:       joinDuplicateHeaders: undefined,
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 2,
backend:dev:       _maxListeners: undefined,
backend:dev:       _connections: 1,
backend:dev:       _handle: [TCP],
backend:dev:       _usingWorkers: false,
backend:dev:       _workers: [],
backend:dev:       _unref: false,
backend:dev:       allowHalfOpen: true,
backend:dev:       pauseOnConnect: false,
backend:dev:       noDelay: true,
backend:dev:       keepAlive: false,
backend:dev:       keepAliveInitialDelay: 0,
backend:dev:       httpAllowHalfOpen: false,
backend:dev:       timeout: 0,
backend:dev:       maxHeadersCount: null,
backend:dev:       maxRequestsPerSocket: 0,
backend:dev:       _connectionKey: '6::::4000',
backend:dev:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
backend:dev:       [Symbol(ServerResponse)]: [Function: ServerResponse],
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(async_id_symbol)]: 111,
backend:dev:       [Symbol(http.server.connections)]: ConnectionsList {},
backend:dev:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
backend:dev:         _idleTimeout: 30000,
backend:dev:         _idlePrev: [TimersList],
backend:dev:         _idleNext: [TimersList],
backend:dev:         _idleStart: 1867,
backend:dev:         _onTimeout: [Function: bound checkConnections],
backend:dev:         _timerArgs: undefined,
backend:dev:         _repeat: 30000,
backend:dev:         _destroyed: false,
backend:dev:         [Symbol(refed)]: false,
backend:dev:         [Symbol(kHasPrimitive)]: false,
backend:dev:         [Symbol(asyncId)]: 110,
backend:dev:         [Symbol(triggerId)]: 0
backend:dev:       },
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     parser: HTTPParser {
backend:dev:       '0': null,
backend:dev:       '1': [Function: parserOnHeaders],
backend:dev:       '2': [Function: parserOnHeadersComplete],
backend:dev:       '3': [Function: parserOnBody],
backend:dev:       '4': [Function: parserOnMessageComplete],
backend:dev:       '5': [Function: bound onParserExecute],
backend:dev:       '6': [Function: bound onParserTimeout],
backend:dev:       _headers: [],
backend:dev:       _url: '',
backend:dev:       socket: [Circular *1],
backend:dev:       incoming: [Circular *2],
backend:dev:       outgoing: null,
backend:dev:       maxHeaderPairs: 2000,
backend:dev:       _consumed: true,
backend:dev:       onIncoming: [Function: bound parserOnIncoming],
backend:dev:       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
backend:dev:     },
backend:dev:     on: [Function: socketListenerWrap],
backend:dev:     addListener: [Function: socketListenerWrap],
backend:dev:     prependListener: [Function: socketListenerWrap],
backend:dev:     setEncoding: [Function: socketSetEncoding],
backend:dev:     _paused: false,
backend:dev:     _httpMessage: ServerResponse {
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 1,
backend:dev:       _maxListeners: undefined,
backend:dev:       outputData: [],
backend:dev:       outputSize: 0,
backend:dev:       writable: true,
backend:dev:       destroyed: false,
backend:dev:       _last: false,
backend:dev:       chunkedEncoding: false,
backend:dev:       shouldKeepAlive: true,
backend:dev:       maxRequestsOnConnectionReached: false,
backend:dev:       _defaultKeepAlive: true,
backend:dev:       useChunkedEncodingByDefault: true,
backend:dev:       sendDate: true,
backend:dev:       _removedConnection: false,
backend:dev:       _removedContLen: false,
backend:dev:       _removedTE: false,
backend:dev:       strictContentLength: false,
backend:dev:       _contentLength: null,
backend:dev:       _hasBody: true,
backend:dev:       _trailer: '',
backend:dev:       finished: false,
backend:dev:       _headerSent: false,
backend:dev:       _closed: false,
backend:dev:       socket: [Circular *1],
backend:dev:       _header: null,
backend:dev:       _keepAliveTimeout: 5000,
backend:dev:       _onPendingData: [Function: bound updateOutgoingData],
backend:dev:       req: [Circular *2],
backend:dev:       _sent100: false,
backend:dev:       _expect_continue: false,
backend:dev:       _maxRequestsPerSocket: 0,
backend:dev:       locals: [Object: null prototype] {},
backend:dev:       statusCode: 201,
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(kBytesWritten)]: 0,
backend:dev:       [Symbol(kNeedDrain)]: false,
backend:dev:       [Symbol(corked)]: 0,
backend:dev:       [Symbol(kOutHeaders)]: [Object: null prototype],
backend:dev:       [Symbol(errored)]: null,
backend:dev:       [Symbol(kUniqueHeaders)]: null
backend:dev:     },
backend:dev:     [Symbol(async_id_symbol)]: 171,
backend:dev:     [Symbol(kHandle)]: TCP {
backend:dev:       reading: false,
backend:dev:       onconnection: null,
backend:dev:       _consumed: true,
backend:dev:       [Symbol(owner_symbol)]: [Circular *1]
backend:dev:     },
backend:dev:     [Symbol(lastWriteQueueSize)]: 0,
backend:dev:     [Symbol(timeout)]: null,
backend:dev:     [Symbol(kBuffer)]: null,
backend:dev:     [Symbol(kBufferCb)]: null,
backend:dev:     [Symbol(kBufferGen)]: null,
backend:dev:     [Symbol(kCapture)]: false,
backend:dev:     [Symbol(kSetNoDelay)]: true,
backend:dev:     [Symbol(kSetKeepAlive)]: false,
backend:dev:     [Symbol(kSetKeepAliveInitialDelay)]: 0,
backend:dev:     [Symbol(kBytesRead)]: 0,
backend:dev:     [Symbol(kBytesWritten)]: 0
backend:dev:   },
backend:dev:   _consuming: true,
backend:dev:   _dumped: false,
backend:dev:   next: [Function: next],
backend:dev:   baseUrl: '',
backend:dev:   originalUrl: '/product',
backend:dev:   _parsedUrl: Url {
backend:dev:     protocol: null,
backend:dev:     slashes: null,
backend:dev:     auth: null,
backend:dev:     host: null,
backend:dev:     port: null,
backend:dev:     hostname: null,
backend:dev:     hash: null,
backend:dev:     search: null,
backend:dev:     query: null,
backend:dev:     pathname: '/product',
backend:dev:     path: '/product',
backend:dev:     href: '/product',
backend:dev:     _raw: '/product'
backend:dev:   },
backend:dev:   params: {},
backend:dev:   query: {},
backend:dev:   res: <ref *3> ServerResponse {
backend:dev:     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },       
backend:dev:     _eventsCount: 1,
backend:dev:     _maxListeners: undefined,
backend:dev:     outputData: [],
backend:dev:     outputSize: 0,
backend:dev:     writable: true,
backend:dev:     destroyed: false,
backend:dev:     _last: false,
backend:dev:     chunkedEncoding: false,
backend:dev:     shouldKeepAlive: true,
backend:dev:     maxRequestsOnConnectionReached: false,
backend:dev:     _defaultKeepAlive: true,
backend:dev:     useChunkedEncodingByDefault: true,
backend:dev:     sendDate: true,
backend:dev:     _removedConnection: false,
backend:dev:     _removedContLen: false,
backend:dev:     _removedTE: false,
backend:dev:     strictContentLength: false,
backend:dev:     _contentLength: null,
backend:dev:     _hasBody: true,
backend:dev:     _trailer: '',
backend:dev:     finished: false,
backend:dev:     _headerSent: false,
backend:dev:     _closed: false,
backend:dev:     socket: <ref *1> Socket {
backend:dev:       connecting: false,
backend:dev:       _hadError: false,
backend:dev:       _parent: null,
backend:dev:       _host: null,
backend:dev:       _closeAfterHandlingError: false,
backend:dev:       _readableState: [ReadableState],
backend:dev:       _events: [Object: null prototype],
backend:dev:       _eventsCount: 8,
backend:dev:       _maxListeners: undefined,
backend:dev:       _writableState: [WritableState],
backend:dev:       allowHalfOpen: true,
backend:dev:       _sockname: null,
backend:dev:       _pendingData: null,
backend:dev:       _pendingEncoding: '',
backend:dev:       server: [Server],
backend:dev:       _server: [Server],
backend:dev:       parser: [HTTPParser],
backend:dev:       on: [Function: socketListenerWrap],
backend:dev:       addListener: [Function: socketListenerWrap],
backend:dev:       prependListener: [Function: socketListenerWrap],
backend:dev:       setEncoding: [Function: socketSetEncoding],
backend:dev:       _paused: false,
backend:dev:       _httpMessage: [Circular *3],
backend:dev:       [Symbol(async_id_symbol)]: 171,
backend:dev:       [Symbol(kHandle)]: [TCP],
backend:dev:       [Symbol(lastWriteQueueSize)]: 0,
backend:dev:       [Symbol(timeout)]: null,
backend:dev:       [Symbol(kBuffer)]: null,
backend:dev:       [Symbol(kBufferCb)]: null,
backend:dev:       [Symbol(kBufferGen)]: null,
backend:dev:       [Symbol(kCapture)]: false,
backend:dev:       [Symbol(kSetNoDelay)]: true,
backend:dev:       [Symbol(kSetKeepAlive)]: false,
backend:dev:       [Symbol(kSetKeepAliveInitialDelay)]: 0,
backend:dev:       [Symbol(kBytesRead)]: 0,
backend:dev:       [Symbol(kBytesWritten)]: 0
backend:dev:     },
backend:dev:     _header: null,
backend:dev:     _keepAliveTimeout: 5000,
backend:dev:     _onPendingData: [Function: bound updateOutgoingData],
backend:dev:     req: [Circular *2],
backend:dev:     _sent100: false,
backend:dev:     _expect_continue: false,
backend:dev:     _maxRequestsPerSocket: 0,
backend:dev:     locals: [Object: null prototype] {},
backend:dev:     statusCode: 201,
backend:dev:     [Symbol(kCapture)]: false,
backend:dev:     [Symbol(kBytesWritten)]: 0,
backend:dev:     [Symbol(kNeedDrain)]: false,
backend:dev:     [Symbol(corked)]: 0,
backend:dev:     [Symbol(kOutHeaders)]: [Object: null prototype] {
backend:dev:       'x-powered-by': [Array],
backend:dev:       'access-control-allow-origin': [Array],
backend:dev:       vary: [Array]
backend:dev:     },
backend:dev:     [Symbol(errored)]: null,
backend:dev:     [Symbol(kUniqueHeaders)]: null
backend:dev:   },
backend:dev:   body: [Object: null prototype] {},
backend:dev:   route: Route {
backend:dev:     path: '/product',
backend:dev:     stack: [ [Layer] ],
backend:dev:     methods: { post: true }
backend:dev:   },
backend:dev:   files: [ { fieldname: 'file' }, { fieldname: 'file' } ],
backend:dev:   [Symbol(kCapture)]: false,
backend:dev:   [Symbol(kHeaders)]: {
backend:dev:     host: 'localhost:4000',
backend:dev:     connection: 'keep-alive',
backend:dev:     'content-length': '138974',
backend:dev:     pragma: 'no-cache',
backend:dev:     'cache-control': 'no-cache',
backend:dev:     'sec-ch-ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',   
backend:dev:     'sec-ch-ua-platform': '"Windows"',
backend:dev:     'sec-ch-ua-mobile': '?0',
backend:dev:     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
backend:dev:     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryAGNB4z4qtboyuXAB',
backend:dev:     accept: '*/*',
backend:dev:     origin: 'http://localhost:3000',
backend:dev:     'sec-fetch-site': 'same-site',
backend:dev:     'sec-fetch-mode': 'cors',
backend:dev:     'sec-fetch-dest': 'empty',
backend:dev:     referer: 'http://localhost:3000/',
backend:dev:     'accept-encoding': 'gzip, deflate, br',
backend:dev:     'accept-language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'
backend:dev:   },
backend:dev:   [Symbol(kHeadersCount)]: 36,
backend:dev:   [Symbol(kTrailers)]: null,
backend:dev:   [Symbol(kTrailersCount)]: 0
backend:dev: }
backend:dev: createdProduct: {
backend:dev:   name: 'escarcelle 25',
backend:dev:   price: 530,
backend:dev:   describe: 'azfazgfgtg',
backend:dev:   category: 'escarcelles',
backend:dev:   popular: true,
backend:dev:   imageArray: [],
backend:dev:   _id: new ObjectId("6571fad38f03dddb69787d93"),
backend:dev:   __v: 0
backend:dev: }
